# Default values for headscale.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

replicaCount: 1

image:
  repository: headscale/headscale
  pullPolicy: IfNotPresent
  # Overrides the image tag whose default is the chart appVersion.
  tag: ""

# The url the service will connect to
server_url: https://0.0.0.0:8080

# Address to listen to / bind to on the server
listen_addr: 0.0.0.0:8080

# Address to listen to /metrics
metrics_listen_addr: 0.0.0.0:9090

# Address to listen for gRPC.
grpc_listen_addr: 0.0.0.0:50443

# Allow the gRPC admin interface to run in INSECURE mode.
grpc_allow_insecure: true

# TLS configuration
# URL to ACME directory
acme_url: https://acme-v02.api.letsencrypt.org/directory
# Email to register with ACME provider
acme_email: ""
# Domain name to request a TLS certificate for:
tls_letsencrypt_hostname: ""
# Path to store certificates
tls_letsencrypt_cache_dir: /var/lib/headscale/cache
# Type of ACME challenge to use
tls_letsencrypt_challenge_type: HTTP-01
# When HTTP-01 challenge is chosen, letsencrypt must set up a
# verification endpoint, and it will be listening on:
# :http = port 80
tls_letsencrypt_listen: ":http"
## Use already defined certificates
tls_cert_path: ""
tls_key_path: ""

imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Automatically mount a ServiceAccount's API credentials?
  automount: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}
podLabels: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

persistence:
  accessMode: ReadWriteOnce
  resources:
    requests:
      storage: 10Gi
  existingClaim: ""
  storageClassName: "local-path"

serverService:
  type: ClusterIP
  port: 8080

metricsService:
  type: LoadBalancer
  port: 9090

grpcService:
  type: ClusterIP
  port: 8443

ingress:
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-staging"
  hosts:
    - host: headscale.example.com
      paths:
        - path: /
          pathType: Prefix
          backend:
            service:
              name: headscale-server 
              port:
                number: 8080
  tls:
  - secretName: headscale-tls
    hosts:
      - headscale.example.com

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

# Additional volumes on the output Deployment definition.
volumes:
  - name: headscale-config
    configMap:
      name: headscale-config
      items:
      - key: config.yaml
        path: config.yaml
  - name: headscale-db
    persistentVolumeClaim:
      claimName: headscale-db

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
  - name: headscale-config
    mountPath: "/etc/headscale"
    readOnly: true
  - name: headscale-db
    mountPath: "/var/lib/headscale/"

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}
